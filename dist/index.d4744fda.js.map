{"mappings":"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","sources":["<anon>","src/js/controller.js","src/js/model.js","src/js/views/timerView.js","src/js/views/settingsView.js"],"sourcesContent":["const $0f1d4402dffacf5b$export$ca000e230c0caa3e = {\n    colors: {\n        red: [\n            \"#c84242\",\n            \"#ce5555\",\n            \"#d36868\",\n            \"#b43b3b\"\n        ],\n        pink: [\n            \"#ae3ec9\",\n            \"#b651ce\",\n            \"#be65d4\",\n            \"#8b32a1\"\n        ],\n        blue: [\n            \"#1971c2\",\n            \"#307fc8\",\n            \"#478dce\",\n            \"#145a9b\"\n        ],\n        green: [\n            \"#2f9e44\",\n            \"#44a857\",\n            \"#59b169\",\n            \"#267e36\"\n        ],\n        purple: [\n            \"#7048e8\",\n            \"#7e5aea\",\n            \"#8d6ded\",\n            \"#5a3aba\"\n        ],\n        yellow: [\n            \"#f08c00\",\n            \"#f2981a\",\n            \"#f3a333\",\n            \"#c07000\"\n        ]\n    },\n    autoStartPomodoro: false,\n    autoStartBreak: true,\n    longBreakIntervals: 4,\n    sessionCounter: 1,\n    timers: {\n        pomodoro: {\n            name: \"pomodoro\",\n            timer: 1500,\n            colorSet: [\n                \"#c84242\",\n                \"#ce5555\",\n                \"#d36868\",\n                \"#b43b3b\"\n            ]\n        },\n        shortBreak: {\n            name: \"shortBreak\",\n            timer: 300,\n            colorSet: [\n                \"#2f9e44\",\n                \"#44a857\",\n                \"#59b169\",\n                \"#267e36\"\n            ]\n        },\n        longBreak: {\n            name: \"longBreak\",\n            timer: 900,\n            colorSet: [\n                \"#1971c2\",\n                \"#307fc8\",\n                \"#478dce\",\n                \"#145a9b\"\n            ]\n        }\n    }\n};\nconst $0f1d4402dffacf5b$export$fee4fe55c9084ac3 = function(timerModeName) {\n    return $0f1d4402dffacf5b$export$ca000e230c0caa3e.timers[timerModeName];\n};\nconst $0f1d4402dffacf5b$export$b83faccb13ce656 = function(currentTimerName) {\n    if (currentTimerName === \"pomodoro\" && $0f1d4402dffacf5b$export$ca000e230c0caa3e.sessionCounter % $0f1d4402dffacf5b$export$ca000e230c0caa3e.longBreakIntervals !== 0) return \"shortBreak\";\n    if (currentTimerName === \"pomodoro\" && $0f1d4402dffacf5b$export$ca000e230c0caa3e.sessionCounter % $0f1d4402dffacf5b$export$ca000e230c0caa3e.longBreakIntervals === 0) return \"longBreak\";\n    return \"pomodoro\";\n};\n\n\nclass $ef7da733a9f233fe$var$TimerView {\n    #modeTabsContainer = document.querySelector(\".timer--tabs-box\");\n    #modeTabs = document.querySelectorAll(\".timer--tab\");\n    #timerBtn = document.querySelector(\".btn--timer\");\n    #timerNextSessionBtn = document.querySelector(\".btn--next-session\");\n    #timerDisplay = document.querySelector(\".counter--num-text\");\n    #timerSessionResetBtn = document.querySelector(\".timer--session-reset-btn\");\n    #timerState = false;\n    #timerID = null;\n    #checkTimerID = null;\n    #currentTimerValue = 0;\n    #currentTimerBackground = null;\n    #sessionCounter = 1;\n    /**************** EVENT HANDLERS ****************/ addHandlerReset(handler) {\n        this.#timerSessionResetBtn.addEventListener(\"click\", ()=>{\n            if (window.confirm(\"Are you sure to reset your sessions?\")) {\n                this.#sessionCounter = 1;\n                handler();\n            }\n        });\n    }\n    addHandlerNextSession(handler, state, getNextTimerName) {\n        this.#timerNextSessionBtn.addEventListener(\"click\", ()=>{\n            /* if (\n        getNextTimerName(this.getTimerMode()) === 'shortBreak' ||\n        (getNextTimerName(this.getTimerMode()) === 'longBreak' &&\n          state.autoStartBreak)\n      ) {\n      }\n\n      if (\n        getNextTimerName(this.getTimerMode()) === 'pomodoro' &&\n        state.autoStartBreak\n      ) {\n      } else  */ this._stopTimer();\n            handler();\n        });\n    }\n    addHandlerStart(handler, goToNextSession) {\n        this._timerBtnClickHandler(goToNextSession);\n        handler();\n    }\n    addHandlerTab(handler) {\n        this.#modeTabsContainer.addEventListener(\"click\", (e)=>{\n            if (!e.target.classList.contains(\"timer--tab\")) return;\n            this._activateTab(e.target);\n            handler();\n            this._stopTimer();\n        });\n    }\n    /**************** TIMER FUNCTIONS ****************/ _timerBtnClickHandler(goToNextSession) {\n        this.#timerBtn.addEventListener(\"click\", ()=>{\n            if (this.#timerState) this._stopTimer();\n            else this._startTimer(goToNextSession);\n        });\n    }\n    _clickBtn() {\n        this.#timerBtn.classList.add(\"clicked\");\n        this.#timerBtn.textContent = \"pause\";\n        this.#timerNextSessionBtn.classList.remove(\"hidden\");\n        this.#timerState = true;\n    }\n    _unClickBtn() {\n        this.#timerBtn.classList.remove(\"clicked\");\n        this.#timerBtn.textContent = \"start\";\n        this.#timerNextSessionBtn.classList.add(\"hidden\");\n        this.#timerState = false;\n    }\n    _resumeTimer(goToNextSession) {\n        this.#timerID = setInterval(()=>{\n            if (this.#currentTimerValue !== 0) {\n                this.#currentTimerValue--;\n                this._displayTimer();\n            } else {\n                const autoStart = goToNextSession();\n                if (autoStart.nextTimer === \"pomodoro\" && autoStart.autoStartPomodoro) ;\n                else if (autoStart.nextTimer !== \"pomodoro\" && autoStart.autoStartBreak) ;\n                else this._stopTimer();\n            }\n        }, 1000);\n    }\n    _pauseTimer() {\n        clearInterval(this.#timerID);\n    }\n    _startTimer(goToNextSession) {\n        this._resumeTimer(goToNextSession);\n        this._clickBtn();\n    }\n    _stopTimer() {\n        this._unClickBtn();\n        this._pauseTimer();\n    }\n    _displayTimer() {\n        this.#timerDisplay.textContent = `${String(Math.floor(this.#currentTimerValue / 60)).padStart(2, \"0\")}:${String(this.#currentTimerValue % 60).padStart(2, \"0\")}`;\n    }\n    _displaySession() {\n        this.#timerSessionResetBtn.textContent = `#${this.#sessionCounter}`;\n    }\n    setSession(currentSessionNum) {\n        this.#sessionCounter = currentSessionNum;\n        this._displaySession();\n    }\n    setTimer(timerObject) {\n        this.#currentTimerValue = timerObject.timer;\n        this.#currentTimerBackground = timerObject.colorSet;\n        this._setTimerBackground(this.#currentTimerBackground);\n        this._displayTimer();\n        this.#modeTabs.forEach((tab)=>{\n            if (tab.dataset.mode === timerObject.name) this._activateTab(tab);\n        });\n    }\n    getTimerMode() {\n        let activeTimerModeName = \"\";\n        this.#modeTabs.forEach((tab)=>{\n            if (tab.classList.contains(\"active\")) activeTimerModeName = tab.dataset.mode;\n        });\n        return activeTimerModeName;\n    }\n    _setTimerBackground(curTimeBackground) {\n        document.documentElement.style.setProperty(\"--primary-color\", curTimeBackground[0]);\n        document.documentElement.style.setProperty(\"--light-color\", curTimeBackground[1]);\n        document.documentElement.style.setProperty(\"--light-color-tint--1\", curTimeBackground[2]);\n        document.documentElement.style.setProperty(\"--dense-color\", curTimeBackground[3]);\n    /* --primary-color: #c84242;\n    --light-color: #ce5555;\n    --light-color-tint--1: #d36868;\n    --dense-color: #a03535; */ }\n    /**************** TAB FUNCTIONS ****************/ _activateTab(selectedTab) {\n        this.#modeTabs.forEach((tab)=>{\n            tab.classList.remove(\"active\");\n        });\n        selectedTab.classList.add(\"active\");\n    }\n}\nvar $ef7da733a9f233fe$export$2e2bcd8739ae039 = new $ef7da733a9f233fe$var$TimerView();\n\n\nclass $4c22adf96f0377b2$var$SettingsView {\n    #navBar = document.querySelector(\".nav-bar\");\n    #modalForm = document.querySelector(\".modal-form\");\n    #modalOverlay = document.querySelector(\".overlay\");\n    #modals = document.querySelectorAll(\".modal\");\n    #modalCloseBtns = document.querySelectorAll(\".btn-close\");\n    #modalSliderBtns = document.querySelectorAll(\".btn-slider-container\");\n    #pomodoroInput = document.getElementById(\"timer-pomodoro\");\n    #shortBreakInput = document.getElementById(\"timer-short-br\");\n    #longBreakInput = document.getElementById(\"timer-long-br\");\n    #colorThemeSelectBtns = document.querySelectorAll(\".btn-color-theme-select\");\n    #colorThemeBtns = document.querySelectorAll(\".btn-color-theme\");\n    #colorThemeContainer = document.querySelector(\".color-theme-btn-container\");\n    #colorSelectTextContainer = document.querySelector(\".color-select-text\");\n    #colorThemeBtnSelectContainer = document.querySelector(\".color-theme-btn-select-container\");\n    #breakIntervalInput = document.getElementById(\"break-interval\");\n    #selectedTimerMode = null;\n    #selectedColorSet = null;\n    #colors = {\n        red: [\n            \"#c84242\"\n        ],\n        pink: [\n            \"#ae3ec9\"\n        ],\n        blue: [\n            \"#1971c2\"\n        ],\n        green: [\n            \"#2f9e44\"\n        ],\n        purple: [\n            \"#7048e8\"\n        ],\n        yellow: [\n            \"#f08c00\"\n        ]\n    };\n    constructor(){\n        this._handlerNavButton();\n        this._timerColorThemeClickHandler();\n    }\n    addHandlerTimerSettings(handler, state) {\n        this.#modalForm.addEventListener(\"submit\", (e)=>{\n            e.preventDefault();\n            if (this.#pomodoroInput.value !== \"\" || this.#shortBreakInput.value !== \"\" || this.#longBreakInput.value !== \"\") {\n                state.timers.pomodoro.timer = +this.#pomodoroInput.value * 60;\n                this.#pomodoroInput.value = \"\";\n                state.timers.shortBreak.timer = +this.#shortBreakInput.value * 60;\n                this.#shortBreakInput.value = \"\";\n                state.timers.longBreak.timer = +this.#longBreakInput.value * 60;\n                this.#longBreakInput.value = \"\";\n            }\n            if (this.#breakIntervalInput.value !== \"\") {\n                state.longBreakIntervals = +this.#breakIntervalInput.value;\n                this.#breakIntervalInput.value = \"\";\n            }\n            this._closeModal();\n            handler();\n        });\n    }\n    addHandlerApplyColorSettings(handler, state) {\n        this.#colorThemeBtnSelectContainer.addEventListener(\"click\", (e)=>{\n            if (!e.target.classList.contains(\"btn-color-theme-select\")) return;\n            this.#selectedColorSet = this._chooseColor(e.target);\n            this.#selectedColorSet = e.target.dataset.color;\n            this.#colorThemeBtns.forEach((button)=>{\n                this.#colorThemeBtns.forEach((button)=>{\n                    if (button.dataset.timer === this.#selectedTimerMode) button.style.backgroundColor = this.#colors[this.#selectedColorSet];\n                });\n            });\n            state.timers[this.#selectedTimerMode].colorSet = state.colors[this.#selectedColorSet];\n            this.#modals[1].classList.add(\"hidden\");\n            this.#modals[0].classList.remove(\"hidden\");\n            handler();\n        });\n    }\n    addHandlerSliderBtn(handler) {\n        this.#modalSliderBtns.forEach((slider)=>{\n            slider.addEventListener(\"click\", (e)=>{\n                slider.classList.toggle(\"btn-slider-active\");\n                handler(slider.dataset.name);\n            });\n        });\n    /* btn-slider-active */ }\n    _handlerNavButton() {\n        this.#navBar.addEventListener(\"click\", (e)=>{\n            const button = e.target.closest(\"button\");\n            if (!button.classList.contains(\"btn-nav\")) return;\n            const curModal = button.dataset.target;\n            this._openModal(curModal);\n        });\n        this.#modalCloseBtns.forEach((button)=>{\n            button.addEventListener(\"click\", ()=>this._closeModal());\n        });\n        this.#modalOverlay.addEventListener(\"click\", ()=>this._closeModal());\n    }\n    _timerColorThemeClickHandler() {\n        this.#colorThemeContainer.addEventListener(\"click\", (e)=>{\n            if (!e.target.classList.contains(\"btn-color-theme\")) return;\n            this.#modals[0].classList.add(\"hidden\");\n            this.#modals[1].classList.remove(\"hidden\");\n            if (e.target.dataset.timer === \"pomodoro\") this.#colorSelectTextContainer.textContent = \"Pick a color for Pomodoro\";\n            if (e.target.dataset.timer === \"shortBreak\") this.#colorSelectTextContainer.textContent = \"Pick a color for Short Break\";\n            if (e.target.dataset.timer === \"longBreak\") this.#colorSelectTextContainer.textContent = \"Pick a color for Long Break\";\n            this.#selectedTimerMode = e.target.dataset.timer;\n        });\n    }\n    _chooseColor(selectedColorBtn) {\n        this.#colorThemeSelectBtns.forEach((button)=>{\n            button.classList.remove(\"selected\");\n        });\n        selectedColorBtn.classList.add(\"selected\");\n        return selectedColorBtn.dataset.color;\n    }\n    _openModal(curModal) {\n        this.#modals.forEach((modal)=>{\n            if (modal.classList.contains(`modal__${curModal}`)) {\n                modal.classList.remove(\"hidden\");\n                this.#modalOverlay.classList.remove(\"hidden\");\n            }\n        });\n    }\n    _closeModal() {\n        this.#modals.forEach((modal)=>{\n            modal.classList.add(\"hidden\");\n        });\n        this.#modalOverlay.classList.add(\"hidden\");\n    }\n}\nvar $4c22adf96f0377b2$export$2e2bcd8739ae039 = new $4c22adf96f0377b2$var$SettingsView();\n\n\nconst $f50bd1f2915ed0f2$var$controlTimer = function() {\n    const currentTimerMode = $0f1d4402dffacf5b$export$fee4fe55c9084ac3(\"pomodoro\");\n    (0, $ef7da733a9f233fe$export$2e2bcd8739ae039).setTimer(currentTimerMode);\n};\nconst $f50bd1f2915ed0f2$var$controlApplySettings = function() {\n    const currentTimerMode = (0, $ef7da733a9f233fe$export$2e2bcd8739ae039).getTimerMode();\n    const currentTimerObject = $0f1d4402dffacf5b$export$fee4fe55c9084ac3(currentTimerMode);\n    (0, $ef7da733a9f233fe$export$2e2bcd8739ae039).setTimer(currentTimerObject);\n};\nconst $f50bd1f2915ed0f2$var$controlTab = function() {\n    const currentTimerMode = (0, $ef7da733a9f233fe$export$2e2bcd8739ae039).getTimerMode();\n    const currentTimerObject = $0f1d4402dffacf5b$export$fee4fe55c9084ac3(currentTimerMode);\n    (0, $ef7da733a9f233fe$export$2e2bcd8739ae039).setTimer(currentTimerObject);\n};\nconst $f50bd1f2915ed0f2$var$controlNextSession = function() {\n    (0, $ef7da733a9f233fe$export$2e2bcd8739ae039).setSession($0f1d4402dffacf5b$export$ca000e230c0caa3e.sessionCounter);\n    const currentTimerMode = (0, $ef7da733a9f233fe$export$2e2bcd8739ae039).getTimerMode();\n    const nextTimerMode = $0f1d4402dffacf5b$export$b83faccb13ce656(currentTimerMode);\n    const autoStart = {\n        nextTimer: nextTimerMode,\n        autoStartPomodoro: $0f1d4402dffacf5b$export$ca000e230c0caa3e.autoStartPomodoro,\n        autoStartBreak: $0f1d4402dffacf5b$export$ca000e230c0caa3e.autoStartBreak\n    };\n    if (nextTimerMode !== \"pomodoro\") $0f1d4402dffacf5b$export$ca000e230c0caa3e.sessionCounter++;\n    const nextTimerObject = $0f1d4402dffacf5b$export$fee4fe55c9084ac3(nextTimerMode);\n    (0, $ef7da733a9f233fe$export$2e2bcd8739ae039).setTimer(nextTimerObject);\n    return autoStart;\n};\nconst $f50bd1f2915ed0f2$var$controlResetSessions = function() {\n    $0f1d4402dffacf5b$export$ca000e230c0caa3e.sessionCounter = 1;\n    (0, $ef7da733a9f233fe$export$2e2bcd8739ae039).setSession($0f1d4402dffacf5b$export$ca000e230c0caa3e.sessionCounter);\n};\nconst $f50bd1f2915ed0f2$var$controlSliderBtn = function(value) {\n    if (value === \"shortBreak\") $0f1d4402dffacf5b$export$ca000e230c0caa3e.autoStartBreak = !$0f1d4402dffacf5b$export$ca000e230c0caa3e.autoStartBreak;\n    if (value === \"pomodoro\") $0f1d4402dffacf5b$export$ca000e230c0caa3e.autoStartPomodoro = !$0f1d4402dffacf5b$export$ca000e230c0caa3e.autoStartPomodoro;\n};\nconst $f50bd1f2915ed0f2$var$init = function() {\n    (0, $ef7da733a9f233fe$export$2e2bcd8739ae039).addHandlerStart($f50bd1f2915ed0f2$var$controlTimer, $f50bd1f2915ed0f2$var$controlNextSession);\n    (0, $ef7da733a9f233fe$export$2e2bcd8739ae039).addHandlerTab($f50bd1f2915ed0f2$var$controlTab);\n    (0, $ef7da733a9f233fe$export$2e2bcd8739ae039).addHandlerNextSession($f50bd1f2915ed0f2$var$controlNextSession, $0f1d4402dffacf5b$export$ca000e230c0caa3e, $0f1d4402dffacf5b$export$b83faccb13ce656);\n    (0, $ef7da733a9f233fe$export$2e2bcd8739ae039).addHandlerReset($f50bd1f2915ed0f2$var$controlResetSessions);\n    (0, $4c22adf96f0377b2$export$2e2bcd8739ae039).addHandlerTimerSettings($f50bd1f2915ed0f2$var$controlApplySettings, $0f1d4402dffacf5b$export$ca000e230c0caa3e);\n    (0, $4c22adf96f0377b2$export$2e2bcd8739ae039).addHandlerApplyColorSettings($f50bd1f2915ed0f2$var$controlApplySettings, $0f1d4402dffacf5b$export$ca000e230c0caa3e);\n    (0, $4c22adf96f0377b2$export$2e2bcd8739ae039).addHandlerSliderBtn($f50bd1f2915ed0f2$var$controlSliderBtn);\n};\n$f50bd1f2915ed0f2$var$init();\n\n\n//# sourceMappingURL=index.d4744fda.js.map\n","import * as model from './model.js';\nimport timerView from './views/timerView.js';\nimport settingsView from './views/settingsView.js';\n\nconst controlTimer = function () {\n  const currentTimerMode = model.getTimerObject('pomodoro');\n  timerView.setTimer(currentTimerMode);\n};\n\nconst controlApplySettings = function () {\n  const currentTimerMode = timerView.getTimerMode();\n  const currentTimerObject = model.getTimerObject(currentTimerMode);\n  timerView.setTimer(currentTimerObject);\n};\n\nconst controlTab = function () {\n  const currentTimerMode = timerView.getTimerMode();\n  const currentTimerObject = model.getTimerObject(currentTimerMode);\n  timerView.setTimer(currentTimerObject);\n};\n\nconst controlNextSession = function () {\n  timerView.setSession(model.state.sessionCounter);\n  const currentTimerMode = timerView.getTimerMode();\n  const nextTimerMode = model.getNextTimerName(currentTimerMode);\n\n  const autoStart = {\n    nextTimer: nextTimerMode,\n    autoStartPomodoro: model.state.autoStartPomodoro,\n    autoStartBreak: model.state.autoStartBreak,\n  };\n\n  if (nextTimerMode !== 'pomodoro') {\n    model.state.sessionCounter++;\n  }\n  const nextTimerObject = model.getTimerObject(nextTimerMode);\n  timerView.setTimer(nextTimerObject);\n\n  return autoStart;\n};\n\nconst controlResetSessions = function () {\n  model.state.sessionCounter = 1;\n  timerView.setSession(model.state.sessionCounter);\n};\n\nconst controlSliderBtn = function (value) {\n  if (value === 'shortBreak') {\n    model.state.autoStartBreak = !model.state.autoStartBreak;\n  }\n\n  if (value === 'pomodoro') {\n    model.state.autoStartPomodoro = !model.state.autoStartPomodoro;\n  }\n};\n\nconst init = function () {\n  timerView.addHandlerStart(controlTimer, controlNextSession);\n  timerView.addHandlerTab(controlTab);\n  timerView.addHandlerNextSession(\n    controlNextSession,\n    model.state,\n    model.getNextTimerName\n  );\n  timerView.addHandlerReset(controlResetSessions);\n  settingsView.addHandlerTimerSettings(controlApplySettings, model.state);\n  settingsView.addHandlerApplyColorSettings(controlApplySettings, model.state);\n  settingsView.addHandlerSliderBtn(controlSliderBtn);\n};\n\ninit();\n","export const state = {\n  colors: {\n    red: ['#c84242', '#ce5555', '#d36868', '#b43b3b'],\n    pink: ['#ae3ec9', '#b651ce', '#be65d4', '#8b32a1'],\n    blue: ['#1971c2', '#307fc8', '#478dce', '#145a9b'],\n    green: ['#2f9e44', '#44a857', '#59b169', '#267e36'],\n    purple: ['#7048e8', '#7e5aea', '#8d6ded', '#5a3aba'],\n    yellow: ['#f08c00', '#f2981a', '#f3a333', '#c07000'],\n  },\n  autoStartPomodoro: false,\n  autoStartBreak: true,\n  longBreakIntervals: 4,\n  sessionCounter: 1,\n  timers: {\n    pomodoro: {\n      name: 'pomodoro',\n      timer: 1500,\n      colorSet: ['#c84242', '#ce5555', '#d36868', '#b43b3b'],\n    },\n    shortBreak: {\n      name: 'shortBreak',\n      timer: 300,\n      colorSet: ['#2f9e44', '#44a857', '#59b169', '#267e36'],\n    },\n    longBreak: {\n      name: 'longBreak',\n      timer: 900,\n      colorSet: ['#1971c2', '#307fc8', '#478dce', '#145a9b'],\n    },\n  },\n};\n\nexport const getTimerObject = function (timerModeName) {\n  return state.timers[timerModeName];\n};\n\nexport const getNextTimerName = function (currentTimerName) {\n  if (\n    currentTimerName === 'pomodoro' &&\n    state.sessionCounter % state.longBreakIntervals !== 0\n  ) {\n    return 'shortBreak';\n  }\n\n  if (\n    currentTimerName === 'pomodoro' &&\n    state.sessionCounter % state.longBreakIntervals === 0\n  ) {\n    return 'longBreak';\n  }\n\n  return 'pomodoro';\n};\n","class TimerView {\n  #modeTabsContainer = document.querySelector('.timer--tabs-box');\n  #modeTabs = document.querySelectorAll('.timer--tab');\n  #timerBtn = document.querySelector('.btn--timer');\n  #timerNextSessionBtn = document.querySelector('.btn--next-session');\n  #timerDisplay = document.querySelector('.counter--num-text');\n  #timerSessionResetBtn = document.querySelector('.timer--session-reset-btn');\n\n  #timerState = false;\n  #timerID = null;\n  #checkTimerID = null;\n  #currentTimerValue = 0;\n  #currentTimerBackground = null;\n\n  #sessionCounter = 1;\n\n  /**************** EVENT HANDLERS ****************/\n  addHandlerReset(handler) {\n    this.#timerSessionResetBtn.addEventListener('click', () => {\n      if (window.confirm('Are you sure to reset your sessions?')) {\n        this.#sessionCounter = 1;\n        handler();\n      }\n    });\n  }\n\n  addHandlerNextSession(handler, state, getNextTimerName) {\n    this.#timerNextSessionBtn.addEventListener('click', () => {\n      /* if (\n        getNextTimerName(this.getTimerMode()) === 'shortBreak' ||\n        (getNextTimerName(this.getTimerMode()) === 'longBreak' &&\n          state.autoStartBreak)\n      ) {\n      }\n\n      if (\n        getNextTimerName(this.getTimerMode()) === 'pomodoro' &&\n        state.autoStartBreak\n      ) {\n      } else  */ this._stopTimer();\n      handler();\n    });\n  }\n  addHandlerStart(handler, goToNextSession) {\n    this._timerBtnClickHandler(goToNextSession);\n    handler();\n  }\n\n  addHandlerTab(handler) {\n    this.#modeTabsContainer.addEventListener('click', (e) => {\n      if (!e.target.classList.contains('timer--tab')) return;\n\n      this._activateTab(e.target);\n      handler();\n      this._stopTimer();\n    });\n  }\n\n  /**************** TIMER FUNCTIONS ****************/\n\n  _timerBtnClickHandler(goToNextSession) {\n    this.#timerBtn.addEventListener('click', () => {\n      if (this.#timerState) {\n        this._stopTimer();\n      } else {\n        this._startTimer(goToNextSession);\n      }\n    });\n  }\n\n  _clickBtn() {\n    this.#timerBtn.classList.add('clicked');\n    this.#timerBtn.textContent = 'pause';\n    this.#timerNextSessionBtn.classList.remove('hidden');\n    this.#timerState = true;\n  }\n\n  _unClickBtn() {\n    this.#timerBtn.classList.remove('clicked');\n    this.#timerBtn.textContent = 'start';\n    this.#timerNextSessionBtn.classList.add('hidden');\n    this.#timerState = false;\n  }\n\n  _resumeTimer(goToNextSession) {\n    this.#timerID = setInterval(() => {\n      if (this.#currentTimerValue !== 0) {\n        this.#currentTimerValue--;\n        this._displayTimer();\n      } else {\n        const autoStart = goToNextSession();\n        if (autoStart.nextTimer === 'pomodoro' && autoStart.autoStartPomodoro);\n        else if (\n          autoStart.nextTimer !== 'pomodoro' &&\n          autoStart.autoStartBreak\n        );\n        else {\n          this._stopTimer();\n        }\n      }\n    }, 1000);\n  }\n\n  _pauseTimer() {\n    clearInterval(this.#timerID);\n  }\n\n  _startTimer(goToNextSession) {\n    this._resumeTimer(goToNextSession);\n    this._clickBtn();\n  }\n\n  _stopTimer() {\n    this._unClickBtn();\n    this._pauseTimer();\n  }\n\n  _displayTimer() {\n    this.#timerDisplay.textContent = `${String(\n      Math.floor(this.#currentTimerValue / 60)\n    ).padStart(2, '0')}:${String(this.#currentTimerValue % 60).padStart(\n      2,\n      '0'\n    )}`;\n  }\n\n  _displaySession() {\n    this.#timerSessionResetBtn.textContent = `#${this.#sessionCounter}`;\n  }\n\n  setSession(currentSessionNum) {\n    this.#sessionCounter = currentSessionNum;\n    this._displaySession();\n  }\n\n  setTimer(timerObject) {\n    this.#currentTimerValue = timerObject.timer;\n    this.#currentTimerBackground = timerObject.colorSet;\n    this._setTimerBackground(this.#currentTimerBackground);\n    this._displayTimer();\n    this.#modeTabs.forEach((tab) => {\n      if (tab.dataset.mode === timerObject.name) {\n        this._activateTab(tab);\n      }\n    });\n  }\n\n  getTimerMode() {\n    let activeTimerModeName = '';\n\n    this.#modeTabs.forEach((tab) => {\n      if (tab.classList.contains('active')) {\n        activeTimerModeName = tab.dataset.mode;\n      }\n    });\n\n    return activeTimerModeName;\n  }\n\n  _setTimerBackground(curTimeBackground) {\n    document.documentElement.style.setProperty(\n      '--primary-color',\n      curTimeBackground[0]\n    );\n    document.documentElement.style.setProperty(\n      '--light-color',\n      curTimeBackground[1]\n    );\n    document.documentElement.style.setProperty(\n      '--light-color-tint--1',\n      curTimeBackground[2]\n    );\n    document.documentElement.style.setProperty(\n      '--dense-color',\n      curTimeBackground[3]\n    );\n    /* --primary-color: #c84242;\n    --light-color: #ce5555;\n    --light-color-tint--1: #d36868;\n    --dense-color: #a03535; */\n  }\n\n  /**************** TAB FUNCTIONS ****************/\n\n  _activateTab(selectedTab) {\n    this.#modeTabs.forEach((tab) => {\n      tab.classList.remove('active');\n    });\n\n    selectedTab.classList.add('active');\n  }\n}\n\nexport default new TimerView();\n","class SettingsView {\n  #navBar = document.querySelector('.nav-bar');\n  #modalForm = document.querySelector('.modal-form');\n  #modalOverlay = document.querySelector('.overlay');\n  #modals = document.querySelectorAll('.modal');\n  #modalCloseBtns = document.querySelectorAll('.btn-close');\n  #modalSliderBtns = document.querySelectorAll('.btn-slider-container');\n  #pomodoroInput = document.getElementById('timer-pomodoro');\n  #shortBreakInput = document.getElementById('timer-short-br');\n  #longBreakInput = document.getElementById('timer-long-br');\n  #colorThemeSelectBtns = document.querySelectorAll('.btn-color-theme-select');\n  #colorThemeBtns = document.querySelectorAll('.btn-color-theme');\n  #colorThemeContainer = document.querySelector('.color-theme-btn-container');\n  #colorSelectTextContainer = document.querySelector('.color-select-text');\n  #colorThemeBtnSelectContainer = document.querySelector(\n    '.color-theme-btn-select-container'\n  );\n  #breakIntervalInput = document.getElementById('break-interval');\n  #selectedTimerMode = null;\n  #selectedColorSet = null;\n  #colors = {\n    red: ['#c84242'],\n    pink: ['#ae3ec9'],\n    blue: ['#1971c2'],\n    green: ['#2f9e44'],\n    purple: ['#7048e8'],\n    yellow: ['#f08c00'],\n  };\n\n  constructor() {\n    this._handlerNavButton();\n    this._timerColorThemeClickHandler();\n  }\n\n  addHandlerTimerSettings(handler, state) {\n    this.#modalForm.addEventListener('submit', (e) => {\n      e.preventDefault();\n      if (\n        this.#pomodoroInput.value !== '' ||\n        this.#shortBreakInput.value !== '' ||\n        this.#longBreakInput.value !== ''\n      ) {\n        state.timers.pomodoro.timer = +this.#pomodoroInput.value * 60;\n        this.#pomodoroInput.value = '';\n\n        state.timers.shortBreak.timer = +this.#shortBreakInput.value * 60;\n        this.#shortBreakInput.value = '';\n\n        state.timers.longBreak.timer = +this.#longBreakInput.value * 60;\n        this.#longBreakInput.value = '';\n      }\n\n      if (this.#breakIntervalInput.value !== '') {\n        state.longBreakIntervals = +this.#breakIntervalInput.value;\n        this.#breakIntervalInput.value = '';\n      }\n\n      this._closeModal();\n      handler();\n    });\n  }\n\n  addHandlerApplyColorSettings(handler, state) {\n    this.#colorThemeBtnSelectContainer.addEventListener('click', (e) => {\n      if (!e.target.classList.contains('btn-color-theme-select')) return;\n      this.#selectedColorSet = this._chooseColor(e.target);\n      this.#selectedColorSet = e.target.dataset.color;\n      this.#colorThemeBtns.forEach((button) => {\n        this.#colorThemeBtns.forEach((button) => {\n          if (button.dataset.timer === this.#selectedTimerMode) {\n            button.style.backgroundColor = this.#colors[this.#selectedColorSet];\n          }\n        });\n      });\n\n      state.timers[this.#selectedTimerMode].colorSet =\n        state.colors[this.#selectedColorSet];\n\n      this.#modals[1].classList.add('hidden');\n      this.#modals[0].classList.remove('hidden');\n\n      handler();\n    });\n  }\n\n  addHandlerSliderBtn(handler) {\n    this.#modalSliderBtns.forEach((slider) => {\n      slider.addEventListener('click', (e) => {\n        slider.classList.toggle('btn-slider-active');\n        handler(slider.dataset.name);\n      });\n    });\n\n    /* btn-slider-active */\n  }\n\n  _handlerNavButton() {\n    this.#navBar.addEventListener('click', (e) => {\n      const button = e.target.closest('button');\n      if (!button.classList.contains('btn-nav')) return;\n\n      const curModal = button.dataset.target;\n      this._openModal(curModal);\n    });\n\n    this.#modalCloseBtns.forEach((button) => {\n      button.addEventListener('click', () => this._closeModal());\n    });\n\n    this.#modalOverlay.addEventListener('click', () => this._closeModal());\n  }\n\n  _timerColorThemeClickHandler() {\n    this.#colorThemeContainer.addEventListener('click', (e) => {\n      if (!e.target.classList.contains('btn-color-theme')) return;\n      this.#modals[0].classList.add('hidden');\n      this.#modals[1].classList.remove('hidden');\n\n      if (e.target.dataset.timer === 'pomodoro') {\n        this.#colorSelectTextContainer.textContent =\n          'Pick a color for Pomodoro';\n      }\n\n      if (e.target.dataset.timer === 'shortBreak') {\n        this.#colorSelectTextContainer.textContent =\n          'Pick a color for Short Break';\n      }\n\n      if (e.target.dataset.timer === 'longBreak') {\n        this.#colorSelectTextContainer.textContent =\n          'Pick a color for Long Break';\n      }\n      this.#selectedTimerMode = e.target.dataset.timer;\n    });\n  }\n\n  _chooseColor(selectedColorBtn) {\n    this.#colorThemeSelectBtns.forEach((button) => {\n      button.classList.remove('selected');\n    });\n\n    selectedColorBtn.classList.add('selected');\n    return selectedColorBtn.dataset.color;\n  }\n\n  _openModal(curModal) {\n    this.#modals.forEach((modal) => {\n      if (modal.classList.contains(`modal__${curModal}`)) {\n        modal.classList.remove('hidden');\n        this.#modalOverlay.classList.remove('hidden');\n      }\n    });\n  }\n\n  _closeModal() {\n    this.#modals.forEach((modal) => {\n      modal.classList.add('hidden');\n    });\n\n    this.#modalOverlay.classList.add('hidden');\n  }\n}\n\nexport default new SettingsView();\n"],"names":["$0f1d4402dffacf5b$export$ca000e230c0caa3e","colors","red","pink","blue","green","purple","yellow","autoStartPomodoro","autoStartBreak","longBreakIntervals","sessionCounter","timers","pomodoro","name","timer","colorSet","shortBreak","longBreak","$0f1d4402dffacf5b$export$fee4fe55c9084ac3","timerModeName","$0f1d4402dffacf5b$export$b83faccb13ce656","currentTimerName","$ef7da733a9f233fe$var$TimerView","modeTabsContainer","document","querySelector","modeTabs","querySelectorAll","timerBtn","timerNextSessionBtn","timerDisplay","timerSessionResetBtn","timerState","timerID","checkTimerID","currentTimerValue","currentTimerBackground","addHandlerReset","handler","addEventListener","window","confirm","addHandlerNextSession","state","getNextTimerName","_stopTimer","addHandlerStart","goToNextSession","_timerBtnClickHandler","addHandlerTab","e","target","classList","contains","_activateTab","_startTimer","_clickBtn","add","textContent","remove","_unClickBtn","_resumeTimer","setInterval","_displayTimer","autoStart","nextTimer","_pauseTimer","clearInterval","String","Math","floor","padStart","_displaySession","setSession","currentSessionNum","setTimer","timerObject","_setTimerBackground","forEach","tab","dataset","mode","getTimerMode","activeTimerModeName","curTimeBackground","documentElement","style","setProperty","selectedTab","$ef7da733a9f233fe$export$2e2bcd8739ae039","$4c22adf96f0377b2$var$SettingsView","navBar","modalForm","modalOverlay","modals","modalCloseBtns","modalSliderBtns","pomodoroInput","getElementById","shortBreakInput","longBreakInput","colorThemeSelectBtns","colorThemeBtns","colorThemeContainer","colorSelectTextContainer","colorThemeBtnSelectContainer","breakIntervalInput","selectedTimerMode","selectedColorSet","constructor","_handlerNavButton","_timerColorThemeClickHandler","addHandlerTimerSettings","preventDefault","value","_closeModal","addHandlerApplyColorSettings","_chooseColor","color","button","backgroundColor","addHandlerSliderBtn","slider","toggle","closest","curModal","_openModal","selectedColorBtn","modal","$4c22adf96f0377b2$export$2e2bcd8739ae039","$f50bd1f2915ed0f2$var$controlApplySettings","currentTimerMode","currentTimerObject","$f50bd1f2915ed0f2$var$controlNextSession","nextTimerMode","nextTimerObject"],"version":3,"file":"index.d4744fda.js.map"}